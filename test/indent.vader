Before:
=======
  BracelessEnable +indent +fold +highlight

Given python (func sig):
======================
  def example():

Execute (verify indentexpr):
============================
  AssertEqual 'braceless#indent#expr(v:lnum)', &indentexpr

Do (insert line autoindent):
============================
  opass

Expect python (new indented line):
==================================
  def example():
      pass

Given python (print statement):
==========================
  print('hello')

Do (add string below):
==========================
  $i\<cr>', world!'

Expect python (new string directly below previous string):
==========================================================
  print('hello'
        ', world!')

Do (move argument to next line):
================================
  f'i\<cr>

Expect python (argument and end paren indented 1 level below print statement):
==============================================================================
  print(
      'hello')

Given python (dict with nested dicts and tuple):
================================================
  thangs = {
  'foo': 'bar',
  'baz': 'spam',
  'eggs': (
  'fried',
  'scrambled',
  'boiled',
  'over easy',
  ),
  'into the hole': {
  'deeper': {
  'and': {
  'deeper': {
  'we': 'go',
  },
  },
  },
  },
  }

Do (autoindent dict):
=====================
  ggVG=

Expect python (properly formatted dict):
========================================
  thangs = {
      'foo': 'bar',
      'baz': 'spam',
      'eggs': (
          'fried',
          'scrambled',
          'boiled',
          'over easy',
      ),
      'into the hole': {
          'deeper': {
              'and': {
                  'deeper': {
                      'we': 'go',
                  },
              },
          },
      },
  }

Given python (func with no body or following blocks):
=====================================================
  def example():

Do (add statement below func sig):
==================================
  A\<cr>pass

Expect python (statement indented past func sig):
=================================================
  def example():
      pass

Do (unindent after adding a blank line):
========================================
  A\<cr>\<cr>pass

Expect python (statement properly indented):
============================================
  def example():

  pass

Do (enter blank lines and retain indent):
=========================================
  A\<cr>\<cr>\<tab>\<cr>\<cr>pass

Expect python (overindented pass):
===========================
  def example():

      

      pass

Do (insert try+except without bodies):
======================================
  A\<cr>try:\<cr>except:

Expect python (except block on same indent level as try):
=========================================================
  def example():
      try:
      except:

Do (insert try+except with try body):
=====================================
  A\<cr>try:\<cr>pass\<cr>except:

Expect python (except block on same indent level as try):
=========================================================
  def example():
      try:
          pass
      except:

Do (insert nested try+except):
==============================
  A\<cr>try:\<cr>try:\<cr>except:\<cr>except:

Expect python (nested try with two except blocks):
==================================================
  def example():
      try:
          try:
          except:
          except:

Do (insert if statement with two elif):
=======================================
  A\<cr>if:\<cr>elif:\<cr>elif:

Expect python (all three lines on same indent level):
=====================================================
  def example():
      if:
      elif:
      elif:

Given python (else overindented):
=================================
  if True:
      pass
      else:

Do (reindent with sibling block):
=================================
  jj==

Expect python (else indent match if):
=====================================
  if True:
      pass
  else:

Do (reindent then insert below):
================================
  jj==opass

Expect python (else indent match if with pass below):
=====================================================
  if True:
      pass
  else:
      pass

Given python (if with no body):
=====================================================
  if True:

Do (insert else statement):
===========================
  oelse:

Expect python (else statement with same indent as previous line):
=================================================================
  if True:
  else:

Given python (nested block with block segment below):
=====================================================
  def example():
      if True:
          if True:
              pass
      print('hello')

Do (insert below print):
========================
  Gopass

Expect python (pass below print):
=================================
  def example():
      if True:
          if True:
              pass
      print('hello')
      pass

Given python (function and non-block):
======================================
  def example():
      pass

  test = 'something'

Do (stay indented with function):
=================================
  jopass

Expect python (second pass indented with function):
===================================================
  def example():
      pass
      pass

  test = 'something'

Do (unindent from function):
============================
  jo\<cr>pass

Expect python (second pass unindented):
=======================================
  def example():
      pass

  pass

  test = 'something'

Do (insert line below non-block):
=================================
  Gopass

Expect python (pass not indented with function):
=========================================
  def example():
      pass

  test = 'something'
  pass

Do (insert line and retain indent):
===================================
  jo\<cr>\<tab>\<cr>\<cr>pass\<esc>

Expect python (second pass retain indent):
==========================================
  def example():
      pass

      

      pass

  test = 'something'

Given python (try block):
=========================
  try:
      if True:
          print('true')
      else:
          print('false')

Do (add except statement):
==========================
  Goexcept:

Expect python (except statement indented with try):
===================================================
  try:
      if True:
          print('true')
      else:
          print('false')
  except:

Do (add more try block statements):
===============================
  Goexcept:\<cr>except:\<cr>else:\<cr>finally:

Expect python (additonal blocks indeted with try):
==================================================
  try:
      if True:
          print('true')
      else:
          print('false')
  except:
  except:
  else:
  finally:

Do (add another try with block statements):
===========================================
  Go\<cr>try:\<cr>if True:\<cr>print('yep')\<cr>elif False:
  \<cr>print('nope')\<cr>else:\<cr>pass\<cr>except:\<cr>pass

Expect python (nested try):
===========================
  try:
      if True:
          print('true')
      else:
          print('false')

      try:
          if True:
              print('yep')
          elif False:
              print('nope')
          else:
              pass
      except:
          pass

Do (add else statement):
==========================
  Goelse:

Expect python (except statement indented with try):
===================================================
  try:
      if True:
          print('true')
      else:
          print('false')
  else:

Do (insert nested if statement):
================================
  Goif:\<cr>if:\<cr>if:\<cr>pass\<cr>else:\<cr>pass\<cr>\<bs>\<bs>elif:\<cr>pass

Expect python (nested indent statements properly indented):
===========================================================
  try:
      if True:
          print('true')
      else:
          print('false')
          if:
              if:
                  if:
                      pass
                  else:
                      pass
              elif:
                  pass

Do (insert nested if statement then reindent):
==============================================
  Goif:\<cr>if:\<cr>if:\<cr>pass\<cr>else:\<cr>pass\<cr>\<bs>\<bs>elif:\<cr>pass
  \<esc>ggVG=

Expect python (nested indent statements properly indented):
===========================================================
  try:
      if True:
          print('true')
      else:
          print('false')
          if:
              if:
                  if:
                      pass
                  else:
                      pass
              elif:
                  pass

Given python (nested try and if with an extra else statement):
==============================================================
  try:
      if True:
          print('true')
      else:
      else:
          print('false')
          if:
              if:
                  if:
                      pass
                  else:
                      pass
              elif:
                  pass

Do (reindent entire buffer):
============================
  ggVG=

Expect python (reindented block with if statement over indented):
=================================================================
-- Note: this is expected since there's no body to give context
  try:
      if True:
          print('true')
      else:
  else:
      print('false')
      if:
              if:
                  if:
                      pass
                  else:
                      pass
              elif:
                  pass

Given python (nested try and if with extra else statement with bodies):
=======================================================================
  try:
      if True:
          print('true')
      else:
      else:
          print('false')
          if:
              pass
              if:
                  pass
                  if:
                      pass
                  else:
                      pass
              elif:
                  pass

Do (reindent entire buffer):
============================
  ggVG=
  
Expect python (properly reindented block):
==========================================
  try:
      if True:
          print('true')
      else:
  else:
      print('false')
      if:
          pass
          if:
              pass
              if:
                  pass
              else:
                  pass
          elif:
              pass

Given python (nested if else):
==============================
  if:
      if:
      else:

Do (insert elif below else):
============================
  Goelif:

Expect python (elif indented with first if):
============================================
  if:
      if:
      else:
  elif:
